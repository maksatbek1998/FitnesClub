<Application x:Class="FitnesClub.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FitnesClub"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="GlavWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.WPF;component/Themes/MaterialDesignTheme.Dark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.WPF;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.LightBlue.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="hederstyle" >
                <Setter Property="Background" Value="White" />
                <Setter Property="Height" Value="30"/>
                <Setter Property="BorderBrush" Value="#DBDBDB"/>
                <Setter Property="BorderThickness" Value="0 1 1 1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Foreground" Value="#FF736D6D"/>
                <Setter Property="Background" Value="#F4F4F4"/>
            </Style>
            <Style TargetType="DataGrid" x:Key="grid_xml">
                <!-- Make the border and grid lines a little less imposing -->
                <Setter Property="BorderBrush" Value="#DDDDDD" />
                <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
                <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
                <Setter Property="ColumnWidth" Value="*"/>
                <Setter Property="RowHeight" Value="27"/>

                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <!-- Highlight a grid row as the mouse passes over -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightCyan" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">

                            <!-- Add some padding around the contents of a cell -->
                            <Setter Property="Padding" Value="4,3,4,3" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="Control">
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="IconColor" Color="#007bab"/>
            <Style x:Key="stylePass" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 BorderBrush="#FFC1C0C0"                                    
                                 BorderThickness="1,1,1,1"
                                 Panel.ZIndex="2" />
                                <!--<Image Source="Image/search2.png" Panel.ZIndex="3" HorizontalAlignment="Right"></Image>-->
                                <materialDesign:PackIcon Kind="FileFindOutline" Height="20" VerticalAlignment="Center" Margin="0,0,10,0" Width="20" Foreground="#FF736D6D" Panel.ZIndex="3" HorizontalAlignment="Right"/>
                                <TextBox Height="30" VerticalContentAlignment="Center" Text="{TemplateBinding Tag}" VerticalAlignment="Center" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                    <Setter Property="FontSize" Value="14"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
